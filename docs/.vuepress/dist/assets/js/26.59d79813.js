(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{303:function(t,r,s){"use strict";s.r(r);var n=s(3),a=Object(n.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"第-2-章-html-中的-javascript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第-2-章-html-中的-javascript"}},[t._v("#")]),t._v(" 第 2 章 HTML 中的 JavaScript")]),t._v(" "),r("p",[t._v("JavaScript 是通过<script>元素插入到 HTML 页面中的。本章的重点可\n以总结如下。")]),t._v(" "),r("ul",[r("li",[t._v("要包含外部 JavaScript 文件，必须将 src 属性设置为要包含文件的 URL。文件可以跟网页在同\n一台服务器上，也可以位于完全不同的域。")]),t._v(" "),r("li",[t._v("所有<script>元素会依照它们在网页中出现的次序被解释。在不使用 defer 和 async 属性的\n情况下，包含在<script>元素中的代码必须严格按次序解释。")]),t._v(" "),r("li",[t._v("对不推迟执行的脚本，浏览器必须解释完位于<script>元素中的代码，然后才能继续渲染页面\n的剩余部分。为此，通常应该把<script>元素放到页面末尾，介于主内容之后及</body>标签\n之前。")]),t._v(" "),r("li",[t._v("可以使用 defer 属性把脚本推迟到文档渲染完毕后再执行。推迟的脚本原则上按照它们被列出\n的次序执行。"),r("strong",[t._v("<延迟下载，立即执行，推迟执行的脚本不一定总会按顺序执行，最好只包含一个这样的脚本>")])]),t._v(" "),r("li",[t._v("可以使用 async 属性表示脚本不需要等待其他脚本，同时也不阻塞文档渲染，即异步加载。异\n步脚本不能保证按照它们在页面中出现的次序执行。"),r("strong",[t._v("<都是告诉浏览器立即开始下载，标记为 async 的脚本并不保证能按照它们出现的次序执行，好的 Web 开发实践根本就不推荐使用这个方法>")])]),t._v(" "),r("li",[t._v("通过使用<noscript>元素，可以指定在浏览器不支持脚本时显示的内容。如果浏览器支持并启\n用脚本，则<noscript>元素中的任何内容都不会被渲染。")])])])}),[],!1,null,null,null);r.default=a.exports}}]);