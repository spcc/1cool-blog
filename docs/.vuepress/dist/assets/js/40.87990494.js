(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{313:function(e,v,t){"use strict";t.r(v);var s=t(3),o=Object(s.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"vue-scoped-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue-scoped-原理"}},[e._v("#")]),e._v(" Vue scoped 原理")]),e._v(" "),v("p",[v("strong",[e._v("Scope CSS 的本质是基于 HTML 和 CSS 属性选择器")]),e._v("，分别给 "),v("code",[e._v("HTML")]),e._v(" 标签和 "),v("code",[e._v("CSS")]),e._v(" 选择器添加  "),v("code",[e._v("data-v-xxx")])]),e._v(" "),v("p",[e._v("具体来说，它是 "),v("strong",[e._v("通过 vue-loader 实现")]),e._v(" 的，实现过程大致分 3 步：")]),e._v(" "),v("ol",[v("li",[v("code",[e._v("vue-loader")]),e._v(" 会解析 "),v("code",[e._v(".vue")]),e._v(" 组件，提取出  "),v("code",[e._v("template")]),e._v("、"),v("code",[e._v("script")]),e._v("、"),v("code",[e._v("style")]),e._v("  对应的代码块")]),e._v(" "),v("li",[e._v("构造组件实例，在组件实例的选项上绑定 "),v("code",[e._v("ScopedId")])]),e._v(" "),v("li",[e._v("对 "),v("code",[e._v("style")]),e._v("  的 "),v("code",[e._v("CSS")]),e._v(" 代码进行编译转化，应用 "),v("code",[e._v("ScopedId")]),e._v(" 生成选择器的属性")])]),e._v(" "),v("h2",{attrs:{id:"大师回答"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大师回答"}},[e._v("#")]),e._v(" 大师回答")]),e._v(" "),v("blockquote",[v("p",[e._v("Vue scoped，原理，涉及到 vue-loader 的处理策略：")]),e._v(" "),v("p",[e._v("一、首先呢，是 "),v("strong",[e._v("VueLoaderPlugin")]),e._v(" 策略：")]),e._v(" "),v("p",[e._v("VueLoaderPlugin 先获取了 webpack 原来的 rules（ 即 "),v("code",[e._v("compiler.option.module.rule")]),e._v(" 的比如 "),v("code",[e._v("test:/.vue$/")]),e._v(" 规则），然后创建了"),v("code",[e._v("pitcher")]),e._v(" 规则，pitcher 中的 "),v("strong",[e._v("pitcher-loader")]),e._v(" 可以通过 "),v("strong",[e._v("resourceQuery")]),e._v(" 识别引入文件的 "),v("strong",[e._v("query")]),e._v(" 带的关键字，进行 "),v("strong",[e._v("loader")]),e._v(" 解析；（pitcher-loader 提供了前置运行和熔断运行的机制）")]),e._v(" "),v("p",[e._v("然后 VueLoaderPlugin 将进行 "),v("code",[e._v("clonedRule")]),e._v("（ 即对 "),v("strong",[e._v("vueRule")]),e._v(" 以外的 rule 进行处理），具体是重写 "),v("strong",[e._v("resource")]),e._v(" 和 "),v("strong",[e._v("resourceQuery")]),e._v("，使得 loader 最终能匹配上文件；")]),e._v(" "),v("p",[e._v("举例：对于 vue+ts 的写法，会在 vue 的 script 标签中加上 "),v("strong",[e._v("lang='ts’")]),e._v("，重写后 "),v("strong",[e._v("fakeresourceQuery")]),e._v(" 文件路径为 xx.vue.ts，然后结合"),v("strong",[e._v("ts-loader")]),e._v(" 的 resource 过滤方法"),v("code",[e._v("/.tsx?$/")]),e._v(" 匹配上文件")]),e._v(" "),v("p",[e._v("然后才来到："),v("code",[e._v("vueRule")]),e._v(" 的 vue-loader 执行阶段；")])]),e._v(" "),v("p",[e._v("这里简单理解：VueLoaderPlugin 就是来处理 rule 的，让 loader 能够和文件匹配。处理顺序："),v("code",[e._v("pitcher")]),e._v(" ⇒ "),v("code",[e._v("clonedRule")]),e._v(" ⇒ "),v("code",[e._v("vueRule")])]),e._v(" "),v("blockquote",[v("p",[e._v("二、 有了上面的匹配文件，接着来到了 "),v("strong",[e._v("vue-loader")]),e._v(" 处理环节，首先 "),v("code",[e._v("@vue/component-compiler-utils")]),e._v(" "),v("code",[e._v(".parse")]),e._v(" 方法可以将 .vue 文件按照 "),v("strong",[e._v("template/script/style")]),e._v(" 分成代码块，此时会根据文件路径和文件内容生成 "),v("code",[e._v("hash")]),e._v(" 值，并赋给 id ，跟在文件参数后面；")])]),e._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 形如 `id=7ba5bd90` ：")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// template")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  render"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  staticRenderFns\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./App.vue?vue&type=template&id=7ba5bd90&scoped=true&'")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// script")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" script "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./App.vue?vue&type=script&lang=js&'")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// style")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" style0 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&'")]),e._v("\n")])])]),v("blockquote",[v("p",[e._v("三、对于 style 代码块，vue-loader 会在 css-loader 前增加"),v("code",[e._v("stylePostLoader")]),e._v("，"),v("code",[e._v("stylePostLoader")]),e._v(" 正是 Vue scoped 的原理核心之一，它会给每个选择器增加属性"),v("code",[e._v("[data-v-hash]")]),e._v(" ，这里的 hash 值就是上面的 id 值；")]),e._v(" "),v("p",[e._v("四、同时，对于 template 的 render 块，vue-loader 的 "),v("code",[e._v("normalizeComponent")]),e._v(" 方法，判断如果 vue 文件中有 scoped 的 style，则其返回的 "),v("strong",[v("code",[e._v("options._ScopedId")])]),e._v(" 为上面的 scopedId；在 vnode 渲染生成 DOM 的时候会在 dom 元素上增增加 scopedId，也就是增加 data-v-hash。")])]),e._v(" "),v("blockquote",[v("p",[e._v("这样，经过上面的过程，Vue scoped 实现了 CSS 的模块私有化。")])])])}),[],!1,null,null,null);v.default=o.exports}}]);