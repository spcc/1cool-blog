(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{322:function(v,_,e){"use strict";e.r(_);var t=e(3),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"常见问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[v._v("#")]),v._v(" 常见问题")]),v._v(" "),_("h2",{attrs:{id:"vue-的优点-vue-的缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-的优点-vue-的缺点"}},[v._v("#")]),v._v(" Vue 的优点? vue 的缺点?")]),v._v(" "),_("p",[_("strong",[v._v("优点:")]),v._v(" 渐进式，轻量级，响应式，虚拟 dom，组件化，数据与视图分开，单页面路由"),_("br"),v._v(" "),_("strong",[v._v("缺点:")]),v._v(" 单页面不利于 seo，不支持 IE8 以下，首屏加载时间长")]),v._v(" "),_("h2",{attrs:{id:"mvvm-是什么-和-mvc-有何区别呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-是什么-和-mvc-有何区别呢"}},[v._v("#")]),v._v(" MVVM 是什么?和 MVC 有何区别呢?")]),v._v(" "),_("p",[v._v("mvc 和 mvvm 都是一种设计思想"),_("br"),v._v("\nmvvm 主要解决了 mvc 中大量 DOM 操作使页面渲染性能降低，加载速度变慢的问题 。")]),v._v(" "),_("p",[v._v("MVVM 与 MVC 最大的区别就是：它实现了 View 和 Model 的自动同步")]),v._v(" "),_("h2",{attrs:{id:"vue-的生命周期-有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-的生命周期-有哪些"}},[v._v("#")]),v._v(" Vue 的生命周期，有哪些？")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("beforeCreate")]),v._v("：实例话 Vue，未初始化和响应式数据")]),v._v(" "),_("li",[_("code",[v._v("created")]),v._v("：已初始化和响应式数据，可访问数据")]),v._v(" "),_("li",[_("code",[v._v("beforeMount")]),v._v("：render 调用，虚拟 DOM 生成，未转真实 DOM")]),v._v(" "),_("li",[_("code",[v._v("mounted")]),v._v("：真实 DOM 挂载完成")]),v._v(" "),_("li",[_("code",[v._v("beforeUpdate")]),v._v("：数据更新，新虚拟 DOM 生成")]),v._v(" "),_("li",[_("code",[v._v("updated")]),v._v("：新旧虚拟 DOM 进行对比，打补丁，然后进行真实 DOM 更新")]),v._v(" "),_("li",[_("code",[v._v("beforeDestroy")]),v._v("：实例销毁前，仍可访问数据")]),v._v(" "),_("li",[_("code",[v._v("destroy")]),v._v("：实例销毁，子实例销毁，指令解绑，解绑本实例的事件")]),v._v(" "),_("li",[_("code",[v._v("activated")]),v._v("：keep-alive 所缓存组件激活时调用")]),v._v(" "),_("li",[_("code",[v._v("deactivated")]),v._v("：keep-alive 所缓存组件停用时调用")]),v._v(" "),_("li",[_("code",[v._v("errorCaptured")]),v._v("：子孙组件的错误捕获，此函数可返回 false 阻止继续向上传播")])]),v._v(" "),_("h2",{attrs:{id:"使用过哪些-vue-的修饰符呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用过哪些-vue-的修饰符呢"}},[v._v("#")]),v._v(" 使用过哪些 Vue 的修饰符呢?")]),v._v(" "),_("p",[v._v("其他")]),v._v(" "),_("ul",[_("li",[_("code",[v._v(".sync")]),v._v("：简化子修改父值的步骤")]),v._v(" "),_("li",[_("code",[v._v(".native")]),v._v("：绑定事件在自定义组件上时，确保能执行")]),v._v(" "),_("li",[_("code",[v._v(".trim")]),v._v("：讲 v-model 绑定的值首位空格给去掉")]),v._v(" "),_("li",[_("code",[v._v(".number")]),v._v("：将 v-medol 绑定的值转数字")]),v._v(" "),_("li",[_("code",[v._v(".lazy")]),v._v("：输入框失焦时才会更新 v-model 的值")])]),v._v(" "),_("p",[v._v("事件修饰符")]),v._v(" "),_("ul",[_("li",[_("code",[v._v(".stop")]),v._v("：阻止事件冒泡")]),v._v(" "),_("li",[_("code",[v._v(".prevent")]),v._v("：阻止默认事件")]),v._v(" "),_("li",[_("code",[v._v(".capture")]),v._v("：事件的捕获")]),v._v(" "),_("li",[_("code",[v._v(".self")]),v._v("：点击事件绑定本身才触发")]),v._v(" "),_("li",[_("code",[v._v(".once")]),v._v("：事件只触发一次")]),v._v(" "),_("li",[_("code",[v._v("passive")]),v._v("：相当于给移动端滚动事件加一个"),_("code",[v._v(".lazy")])])]),v._v(" "),_("p",[v._v("按键修饰符")]),v._v(" "),_("ul",[_("li",[v._v(".enter")]),v._v(" "),_("li",[v._v(".tab")]),v._v(" "),_("li",[v._v(".delete (捕获“删除”和“退格”键)")]),v._v(" "),_("li",[v._v(".esc")]),v._v(" "),_("li",[v._v(".space")]),v._v(" "),_("li",[v._v(".up")]),v._v(" "),_("li",[v._v(".down")]),v._v(" "),_("li",[v._v(".left")]),v._v(" "),_("li",[v._v(".right")])]),v._v(" "),_("p",[v._v("系统修饰符")]),v._v(" "),_("ul",[_("li",[v._v(".ctrl")]),v._v(" "),_("li",[v._v(".alt")]),v._v(" "),_("li",[v._v(".shift")]),v._v(" "),_("li",[v._v(".meta")])]),v._v(" "),_("p",[v._v("鼠标按钮修饰符")]),v._v(" "),_("ul",[_("li",[v._v(".left")]),v._v(" "),_("li",[v._v(".right")]),v._v(" "),_("li",[v._v(".middle")])]),v._v(" "),_("h2",{attrs:{id:"使用过哪些-vue-的内部指令呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用过哪些-vue-的内部指令呢"}},[v._v("#")]),v._v(" 使用过哪些 Vue 的内部指令呢？")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("v-html")]),v._v("：元素的 innerHTML")]),v._v(" "),_("li",[_("code",[v._v("v-text")]),v._v("：元素的 textContent")]),v._v(" "),_("li",[_("code",[v._v("v-show")]),v._v("：通过样式 display 改变显隐,控制的 css")]),v._v(" "),_("li",[_("code",[v._v("v-if")]),v._v("：通过操作 DOM 改变显隐")]),v._v(" "),_("li",[_("code",[v._v("v-else")]),v._v("：配合 v-if")]),v._v(" "),_("li",[_("code",[v._v("v-else-id")]),v._v("：配合 v-else")]),v._v(" "),_("li",[_("code",[v._v("v-for")]),v._v("：循环渲染")]),v._v(" "),_("li",[_("code",[v._v("v-on")]),v._v("：绑定事件，缩写@")]),v._v(" "),_("li",[_("code",[v._v("v-bind")]),v._v("：绑定变量，缩写:")]),v._v(" "),_("li",[_("code",[v._v("v-model")]),v._v("：双向绑定")]),v._v(" "),_("li",[_("code",[v._v("v-slot")]),v._v("：插槽")]),v._v(" "),_("li",[_("code",[v._v("v-once")]),v._v("：只渲染一次")]),v._v(" "),_("li",[_("code",[v._v("v-pre")]),v._v("：跳过元素编译")]),v._v(" "),_("li",[_("code",[v._v("v-cloak")]),v._v("：隐藏双括号，有值显示")])]),v._v(" "),_("h2",{attrs:{id:"v-if-和-v-show-有何区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show-有何区别"}},[v._v("#")]),v._v(" v-if 和 v-show 有何区别？")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("v-if")]),v._v("：通过操作 DOM 来控制显隐")]),v._v(" "),_("li",[_("code",[v._v("v-show")]),v._v("：通过改变 css 样式 display 属性控制显隐")])]),v._v(" "),_("p",[_("strong",[v._v("频繁或者大数量显隐使用 v-show ，否则使用 v-if")])]),v._v(" "),_("h2",{attrs:{id:"为什么-v-if-和-v-for-不建议用在同一标签"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么-v-if-和-v-for-不建议用在同一标签"}},[v._v("#")]),v._v(" 为什么 v-if 和 v-for 不建议用在同一标签？")]),v._v(" "),_("p",[_("code",[v._v("v-for")]),v._v("优先级高于"),_("code",[v._v("v-if")]),v._v("，每项都通过"),_("code",[v._v("v-for")]),v._v("渲染出来后再去通过"),_("code",[v._v("v-if")]),v._v("判断显隐,过程中会增加无用的 dom 操作,渲染了无用的节点")]),v._v(" "),_("h2",{attrs:{id:"组件之间的传值方式有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件之间的传值方式有哪些"}},[v._v("#")]),v._v(" 组件之间的传值方式有哪些?")]),v._v(" "),_("ul",[_("li",[v._v("父传子： 组件使用"),_("code",[v._v("props")]),v._v("进行接收")]),v._v(" "),_("li",[v._v("子传父： 子组件使用"),_("code",[v._v("$emit")]),v._v("+事件对父组件进行传值")]),v._v(" "),_("li",[v._v("父子之间通过"),_("code",[v._v("$parent")]),v._v("和"),_("code",[v._v("$chidren")]),v._v("获取实例进而通信")]),v._v(" "),_("li",[v._v("使用"),_("code",[v._v("$refs")]),v._v("获取组件实例，进而获取数据。使用 vuex 进行状态管理")]),v._v(" "),_("li",[v._v("使用"),_("code",[v._v("eventBus")]),v._v("进行跨组件触发事件，进而传递数据")]),v._v(" "),_("li",[v._v("使用浏览器本地缓存，例如"),_("code",[v._v("localstorage``sessionStorage")])])]),v._v(" "),_("h2",{attrs:{id:"路由有哪些模式呢-又有什么不同呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由有哪些模式呢-又有什么不同呢"}},[v._v("#")]),v._v(" 路由有哪些模式呢?又有什么不同呢?")]),v._v(" "),_("ul",[_("li",[v._v("hash 模式:通过#号后面的内容的更改，触发 hashchange 事件，实现路由切换，而不刷新页面")]),v._v(" "),_("li",[v._v("history 模式:通过 pushState 和 replaceState 切换 url，触发 popstate 事件，实现路由切换，需要后端配合")])]),v._v(" "),_("h2",{attrs:{id:"路由的钩子函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由的钩子函数"}},[v._v("#")]),v._v(" 路由的钩子函数？")]),v._v(" "),_("ul",[_("li",[v._v("beforeEach：跳转路由前")]),v._v(" "),_("li",[_("ul",[_("li",[v._v("to：将要跳转进入的路由对象")]),v._v(" "),_("li",[v._v("from：将要离开的路由对象")]),v._v(" "),_("li",[v._v("next：执行跳转的方法")])])]),v._v(" "),_("li",[v._v("afterEach：路由跳转后")]),v._v(" "),_("li",[_("ul",[_("li",[v._v("to：将要跳转进入的路由对象 "),_("strong",[v._v("组件内路由钩子")])])])]),v._v(" "),_("li",[v._v("beforeRouteEnter(to, from, next)：跳转到路由渲染组件时触发")]),v._v(" "),_("li",[v._v("beforeRouteUpdate(to, from, next)：跳转到路由且组件被复用时触发")]),v._v(" "),_("li",[v._v("beforeRouteLeave(to, from, next)：跳转到路由且离开组件时触发")])]),v._v(" "),_("h2",{attrs:{id:"如何设置动态-class-动态-style"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何设置动态-class-动态-style"}},[v._v("#")]),v._v(" 如何设置动态 class，动态 style？")]),v._v(" "),_("ul",[_("li",[v._v("动态 class 对象："),_("code",[v._v("<div :class=\"{ 'is-active': true, 'red': isRed }\"></div>")])]),v._v(" "),_("li",[v._v("动态 class 数组："),_("code",[v._v("<div :class=\"['is-active', isRed ? 'red' : '' ]\"></div>")])]),v._v(" "),_("li",[v._v("动态 style 对象："),_("code",[v._v("<div :style=\"{ color: textColor, fontSize: '18px' }\"></div>")])])]),v._v(" "),_("h2",{attrs:{id:"vuex-的有哪些属性-用处是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vuex-的有哪些属性-用处是什么"}},[v._v("#")]),v._v(" vuex 的有哪些属性？用处是什么？")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("state")]),v._v("：定义初始状态")]),v._v(" "),_("li",[_("code",[v._v("getter")]),v._v("：从 store 从取数据")]),v._v(" "),_("li",[_("code",[v._v("mutation")]),v._v("：更改 store 中状态，只能同步操作")]),v._v(" "),_("li",[_("code",[v._v("action")]),v._v("：用于提交 mutation，而不直接更改状态，可异步操作")]),v._v(" "),_("li",[_("code",[v._v("module")]),v._v("：store 的模块拆分")])]),v._v(" "),_("h2",{attrs:{id:"watch-有哪些属性-分别有什么用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#watch-有哪些属性-分别有什么用"}},[v._v("#")]),v._v(" watch 有哪些属性，分别有什么用？")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("immediate")]),v._v("：初次加载时立即执行")]),v._v(" "),_("li",[_("code",[v._v("deep")]),v._v("：是否进行深度监听")]),v._v(" "),_("li",[_("code",[v._v("handler")]),v._v("：监听的回调函数")])]),v._v(" "),_("h2",{attrs:{id:"父子组件生命周期顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#父子组件生命周期顺序"}},[v._v("#")]),v._v(" 父子组件生命周期顺序？")]),v._v(" "),_("p",[v._v("父 beforeCreate -> 父 created -> 父 beforeMount -> 子 beforeCreate -> 子 created -> 子 beforeMount -> 子 mounted -> 父 mounted")]),v._v(" "),_("h2",{attrs:{id:"自定义指令的钩子函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令的钩子函数"}},[v._v("#")]),v._v(" 自定义指令的钩子函数？")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("bind")]),v._v("：指令绑定到指定元素时调用，只调用一次")]),v._v(" "),_("li",[_("code",[v._v("inserted")]),v._v("：指定元素插入父节点时调用")]),v._v(" "),_("li",[_("code",[v._v("update")]),v._v("：所在组件的 VNode 更新时调用")]),v._v(" "),_("li",[_("code",[v._v("componnetUpdated")]),v._v("：所在组件以及其子组件 VNode 全部更新后调用")]),v._v(" "),_("li",[_("code",[v._v("unbind")]),v._v("：只调用一次，指令与元素解绑时调用")])]),v._v(" "),_("h2",{attrs:{id:"vue-的-ssr-是什么-有什么好处"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-的-ssr-是什么-有什么好处"}},[v._v("#")]),v._v(" Vue 的 SSR 是什么？有什么好处？")]),v._v(" "),_("p",[v._v("SSR 全称"),_("code",[v._v("Server Side Render")])]),v._v(" "),_("ul",[_("li",[v._v("有利于 SEO：由于是在服务端，将数据填充进 HTML 之后再推送到浏览器，所以有利于 SEO 的爬取")]),v._v(" "),_("li",[v._v("首屏渲染快")])]),v._v(" "),_("p",[v._v("SSR 的缺点：")]),v._v(" "),_("ul",[_("li",[v._v("开发条件会受到限制，服务器端渲染只支持 beforeCreate 和 created 两个钩子；")]),v._v(" "),_("li",[v._v("当需要一些外部扩展库时需要特殊处理，服务端渲染应用程序也需要处于 Node.js 的运行环境；")]),v._v(" "),_("li",[v._v("更多的服务端负载。")])]),v._v(" "),_("h3",{attrs:{id:"vue-响应式是怎么实现的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-响应式是怎么实现的"}},[v._v("#")]),v._v(" Vue 响应式是怎么实现的？")]),v._v(" "),_("ul",[_("li",[v._v("1、劫持：通过"),_("code",[v._v("Object.defineProperty")]),v._v("对对象进行递归劫持属性的"),_("code",[v._v("get、set")])]),v._v(" "),_("li",[v._v("2、观察者模式：使用"),_("code",[v._v("watcher")]),v._v("进行观察数据使用的地方")]),v._v(" "),_("li",[v._v("3、发布订阅模式：使用"),_("code",[v._v("dep")]),v._v("收集"),_("code",[v._v("watcher")]),v._v("，数据更改时，通过"),_("code",[v._v("notify")]),v._v("方法通知"),_("code",[v._v("dep")]),v._v("里的"),_("code",[v._v("watcher")]),v._v("去进行相应的更新")]),v._v(" "),_("li",[v._v("4、数组：数组没有使用劫持的模式，而是通过重写数组原型上的方法，来实现数组的响应式")])]),v._v(" "),_("h2",{attrs:{id:"vue-中封装的数组方法有哪些-如何实现页面更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-中封装的数组方法有哪些-如何实现页面更新"}},[v._v("#")]),v._v(" Vue 中封装的数组方法有哪些，如何实现页面更新")]),v._v(" "),_("ul",[_("li",[v._v("在 Vue 中，对响应式处理利用的是 Object.defineProperty 对数据进行拦截，而这个方法并不能监听到数组内部变化，数组长度变化，数组的截取变化等，所以需要对这些操作进行 hack，让 Vue 能监听到其中的变化")]),v._v(" "),_("li",[v._v("push()")]),v._v(" "),_("li",[v._v("pop()")]),v._v(" "),_("li",[v._v("shift()")]),v._v(" "),_("li",[v._v("unshift()")]),v._v(" "),_("li",[v._v("solice()")]),v._v(" "),_("li",[v._v("sort()")]),v._v(" "),_("li",[v._v("reverse()")])]),v._v(" "),_("h2",{attrs:{id:"vue-有那些性能优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-有那些性能优化"}},[v._v("#")]),v._v(" Vue 有那些性能优化")]),v._v(" "),_("p",[_("strong",[v._v("（1）编码阶段")])]),v._v(" "),_("ul",[_("li",[v._v("尽量减少 data 中的数据，data 中的数据都会增加 getter 和 setter，会收集对应的 watcher")]),v._v(" "),_("li",[v._v("v-if 和 v-for 不能连用")]),v._v(" "),_("li",[v._v("如果需要使用 v-for 给每项元素绑定事件时使用事件代理")]),v._v(" "),_("li",[v._v("SPA 页面采用 keep-alive 缓存组件")]),v._v(" "),_("li",[v._v("在更多的情况下，使用 v-if 替代 v-show")]),v._v(" "),_("li",[v._v("key 保证唯一")]),v._v(" "),_("li",[v._v("使用路由懒加载、异步组件")]),v._v(" "),_("li",[v._v("防抖、节流")]),v._v(" "),_("li",[v._v("第三方模块按需导入")]),v._v(" "),_("li",[v._v("长列表滚动到可视区域动态加载")]),v._v(" "),_("li",[v._v("图片懒加载")])]),v._v(" "),_("p",[_("strong",[v._v("（2）SEO 优化")])]),v._v(" "),_("ul",[_("li",[v._v("预渲染")]),v._v(" "),_("li",[v._v("服务端渲染 SSR")])]),v._v(" "),_("p",[_("strong",[v._v("（3）打包优化")])]),v._v(" "),_("ul",[_("li",[v._v("压缩代码")]),v._v(" "),_("li",[v._v("Tree Shaking/Scope Hoisting")]),v._v(" "),_("li",[v._v("使用 cdn 加载第三方模块")]),v._v(" "),_("li",[v._v("多线程打包 happypack")]),v._v(" "),_("li",[v._v("splitChunks 抽离公共文件")]),v._v(" "),_("li",[v._v("sourceMap 优化")])]),v._v(" "),_("p",[_("strong",[v._v("（4）用户体验")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("骨架屏")])]),v._v(" "),_("li",[_("p",[v._v("PWA")])]),v._v(" "),_("li",[_("p",[v._v("还可以使用缓存(客户端缓存、服务端缓存)优化、服务端开启 gzip 压缩等。")])]),v._v(" "),_("li",[_("p",[_("a",{attrs:{href:"https://juejin.cn/post/7073300624707682317",target:"_blank",rel:"noopener noreferrer"}},[v._v("N 个 Vue 知识点，必会!!! 供复习"),_("OutboundLink")],1)])])])])}),[],!1,null,null,null);_.default=i.exports}}]);