(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{320:function(t,s,a){"use strict";a.r(s);var r=a(3),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端路由实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由实现方式"}},[t._v("#")]),t._v(" 前端路由实现方式")]),t._v(" "),s("p",[s("strong",[t._v("一般路由实现主要有 history 和 hash 两种方式")])]),t._v(" "),s("p",[s("strong",[t._v("hash 实现方式：主要是通过监听 hashchange 事件，处理前端业务逻辑")]),s("br"),t._v(" "),s("strong",[t._v("hash 优点：1. 实现全部在前端，不需要后端服务器配合 2.兼容性好")]),s("br"),t._v(" "),s("strong",[t._v("hash 缺点：URL 中会带有#，看起来不太美观")])]),t._v(" "),s("p",[s("strong",[t._v("history 实现方式：前端通过监听 pushState 及 replaceState 事件，处理前端业务逻辑")]),s("br"),t._v(" "),s("strong",[t._v("history 模式下，刷新会得到 404 的错误，需要配置下 nginx")])]),t._v(" "),s("h2",{attrs:{id:"history-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-模式"}},[t._v("#")]),t._v(" history 模式")]),t._v(" "),s("h3",{attrs:{id:"实现方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现方法"}},[t._v("#")]),t._v(" 实现方法")]),t._v(" "),s("p",[t._v("history 路由模式的实现，是要归功于 HTML5 提供的一个 "),s("strong",[t._v("history")]),t._v(" 全局对象（可以将它理解为其中包含了关于我们访问网页（历史会话）的一些信息）")]),t._v(" "),s("p",[t._v("history 路由的实现，主要就是依靠于 pushState 与 replaceState 实现的，这里我们先总结下它们的一些特点")]),t._v(" "),s("ul",[s("li",[t._v("都会改变当前页面显示的 url，但都不会刷新页面")]),t._v(" "),s("li",[t._v("pushState 是压入浏览器的会话历史栈中，会使得 history.length 加 1，而 replaceState 是替换当前的这条会话历史，因此不会增加 history.length")])]),t._v(" "),s("p",[t._v("既然已经能够通过 pushState 或 replaceState 实现改变 URL 而不刷新页面"),s("br"),t._v(" "),s("strong",[t._v("但是 popstate 无法监听 history.pushState 和 history.replaceState 方法")])]),t._v(" "),s("p",[t._v("既然厂商没实现此功能，那只能重新写下 history.pushState 和 history.replaceState 方法，让你在这个方法中，也能够暴露出自定义的全局事件，然后再监听自定义的事件")]),t._v(" "),s("h3",{attrs:{id:"改写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改写"}},[t._v("#")]),t._v(" 改写")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_wr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" orig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("orig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rv\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nhistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_wr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pushState'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhistory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replaceState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_wr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'replaceState'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("执行完上面两个方法后，相当于将 pushState 和 replaceState 这两个监听器注册到了 window 上面，具体的定义可参考"),s("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FEventTarget%2FdispatchEvent",title:"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/dispatchEvent",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventTarget.dispatchEvent"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"简易实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简易实现"}},[t._v("#")]),t._v(" 简易实现")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看代码")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/173f92132d0a4b1587d70b384c46222b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:""}})])]),t._v(" "),s("h3",{attrs:{id:"暴漏方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暴漏方法"}},[t._v("#")]),t._v(" 暴漏方法")]),t._v(" "),s("p",[t._v("同时它还暴露了一些有用的方法，比如：")]),t._v(" "),s("table",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("解释")])]),t._v(" "),s("tr",[s("td",[t._v("window.history.go")]),t._v(" "),s("td",[t._v("可以跳转到浏览器会话历史中的指定的某一个记录页")])]),t._v(" "),s("tr",[s("td",[t._v("window.history.forward")]),t._v(" "),s("td",[t._v("指向浏览器会话历史中的下一页，跟浏览器的前进按钮相同")])]),t._v(" "),s("tr",[s("td",[t._v("window.history.back")]),t._v(" "),s("td",[t._v("返回浏览器会话历史中的上一页，跟浏览器的回退按钮功能相同")])]),t._v(" "),s("tr",[s("td",[t._v("window.history.pushState")]),t._v(" "),s("td",[t._v("可以将给定的数据压入到浏览器会话历史栈中")])]),t._v(" "),s("tr",[s("td",[t._v("window.history.replaceState")]),t._v(" "),s("td",[t._v("将当前的会话页面的 url 替换成指定的数据")])])]),t._v(" "),s("ul",[s("li",[t._v("window.history.go 可以跳转到浏览器会话历史中的指定的某一个记录页")]),t._v(" "),s("li",[t._v("window.history.forward 指向浏览器会话历史中的下一页，跟浏览器的前进按钮相同")]),t._v(" "),s("li",[t._v("window.history.back 返回浏览器会话历史中的上一页，跟浏览器的回退按钮功能相同")]),t._v(" "),s("li",[t._v("window.history.pushState 可以将给定的数据压入到浏览器会话历史栈中")]),t._v(" "),s("li",[t._v("window.history.replaceState 将当前的会话页面的 url 替换成指定的数据")])]),t._v(" "),s("h3",{attrs:{id:"刷新-404"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#刷新-404"}},[t._v("#")]),t._v(" 刷新 404")]),t._v(" "),s("p",[t._v("刷新会得到 404 的错误（浏览器会把整个地址当成一个可访问的静态资源路径进行访问，然后服务端并没有这个文件)")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没刷新时，只是通过 pushState 改变 URL，不刷新页面")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认访问路径下的index.html文件，没毛病")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仍然访问路径下的index.html文件，没毛病")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有的路由都是访问路径下的index.html，没毛病")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一旦在某个路由下刷新页面的时候，想当于去该路径下寻找可访问的静态资源 index.html，无果，报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".30")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".161")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5500")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html文件，出问题了，服务器上并没有这个资源\n")])])])]),t._v(" "),s("h4",{attrs:{id:"解决方法-nginx-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法-nginx-配置"}},[t._v("#")]),t._v(" 解决方法：Nginx 配置")]),t._v(" "),s("p",[t._v("一般情况下，我们都需要配置 nginx，告诉服务器，当我们访问的路径资源不存在的时候，默认指向静态资源 "),s("code",[t._v("index.html")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  try_files $uri $uri"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.cn/post/7127143415879303204",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官为啥总是喜欢问前端路由实现方式？"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);