(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{347:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"string-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-对象"}},[t._v("#")]),t._v(" String 对象")]),t._v(" "),s("p",[t._v("查找类")]),t._v(" "),s("table",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("版本")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#startsWith() 判断当前字符串是否以指定的字符串开头"}},[t._v("startsWith()")])]),s("td",[t._v("判断当前字符串是否以指定的字符串开头")]),t._v(" "),s("td",[t._v("ECMAScript 6")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#endsWith-判断当前字符串是否是以指定的字符串结尾"}},[t._v("endsWith()")])]),s("td",[t._v("查看字符串是否以指定的子字符串开头")]),t._v(" "),s("td",[t._v("ECMAScript 6")])])]),t._v(" "),s("h2",{attrs:{id:"查找类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找类"}},[t._v("#")]),t._v(" 查找类")]),t._v(" "),s("h3",{attrs:{id:"startswith-判断当前字符串是否以指定的字符串开头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#startswith-判断当前字符串是否以指定的字符串开头"}},[t._v("#")]),t._v(" startsWith() 判断当前字符串是否以指定的字符串开头")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n检测字符串是否以指定的子字符串开始"),s("br"),t._v("\n如果是以指定的子字符串开头返回 true，否则 false"),s("br"),t._v("\nstartsWith() 方法对大小写敏感")]),t._v(" "),s("li",[t._v("语法：string.startsWith(searchvalue, start)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必需，要查找的字符串")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("start")]),s("br"),t._v("\n可选，查找的开始位置，默认为 0")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("Boolean")]),s("br"),t._v("\n如果字符串是以指定的子字符串开头返回 true，否则 false。")])])]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\n区分大小写")]),t._v(" "),s("li",[t._v("JavaScript 版本: ECMAScript 6")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 查看字符串是否为 "Hello" 开头:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world, welcome to the Runoob."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 查看从第 6 个索引位置是否以 "world" 开头')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world, welcome to the Runoob."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"endswith-判断当前字符串是否是以指定的字符串结尾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#endswith-判断当前字符串是否是以指定的字符串结尾"}},[t._v("#")]),t._v(" endsWith() 判断当前字符串是否是以指定的字符串结尾")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n判断当前字符串是否是以指定的子字符串结尾的（区分大小写）")]),t._v(" "),s("li",[t._v("语法：string.endsWith(searchvalue, length)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必需，要搜索的子字符串。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("length")]),s("br"),t._v("\n设置字符串的长度。默认值为原始字符串长度 string.length。")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("Boolean")]),s("br"),t._v("\n如果字符串以指定的值结尾返回 true，否则返回 false。")])])]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\n区分大小写")]),t._v(" "),s("li",[t._v("JavaScript 版本: ECMAScript 6")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置不同字符串长度来判断")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"To be, or not to be, that is the question."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"question."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"to be"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"to be"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h2",{attrs:{id:"通用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通用"}},[t._v("#")]),t._v(" 通用")]),t._v(" "),s("h3",{attrs:{id:"chatat-返回指定位置的字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chatat-返回指定位置的字符"}},[t._v("#")]),t._v(" chatAt() 返回指定位置的字符")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n返回指定位置的字符")]),t._v(" "),s("li",[t._v("语法：string.charAt(index)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("index")]),s("br"),t._v("\n必需。字符在字符串中的下标")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n返回指定位置的字符")])])]),t._v(" "),s("li",[t._v("注意：")]),t._v(" "),s("li",[t._v("JavaScript 版本: 1.0")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回字符串中的最后一个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HELLO WORLD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// D")]),t._v("\n")])])]),s("h3",{attrs:{id:"charcodeat-返回指定的位置的字符的-unicode-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#charcodeat-返回指定的位置的字符的-unicode-编码"}},[t._v("#")]),t._v(" charCodeAt() 返回指定的位置的字符的 Unicode 编码")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\ncharCodeAt() 方法可返回指定位置的字符的 Unicode 编码，返回值是 0 - 65535 之间的整数，表示给定索引处的 UTF-16 代码单元。")]),t._v(" "),s("li",[t._v("语法：string.charCodeAt(index)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("index")]),s("br"),t._v("\n必需。字符在字符串中的下标")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("Number")]),s("br"),t._v("\n返回指定的位置的字符的 Unicode 编码")])])]),t._v(" "),s("li",[t._v("注意：")]),t._v(" "),s("li",[t._v("JavaScript 版本: 1.2")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回字符串中的最后一个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HELLO WORLD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 68")]),t._v("\n")])])]),s("h3",{attrs:{id:"fromcharcode-将-unicode-编码转为字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fromcharcode-将-unicode-编码转为字符"}},[t._v("#")]),t._v(" fromCharCode() 将 Unicode 编码转为字符")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n将 Unicode 编码转为字符。")]),t._v(" "),s("li",[t._v("语法：String.fromCharCode(n1, n2, ..., nX)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("n1, n2, ..., nX")]),s("br"),t._v("\n必需。一个或多个 Unicode 值，即要创建的字符串中的字符的 Unicode 编码。")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n返回代表 Unicode 编码的字符")])])]),t._v(" "),s("li",[t._v("注意：")]),t._v(" "),s("li",[t._v("JavaScript 版本: 1.2")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 Unicode 编码转换为一个字符串:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("69")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("76")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("76")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HELLO")]),t._v("\n")])])]),s("h3",{attrs:{id:"concat-连接两个或多个字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat-连接两个或多个字符串"}},[t._v("#")]),t._v(" concat() 连接两个或多个字符串")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n连接两个或更多字符串，并返回新的字符串。该方法没有改变原有字符串。")]),t._v(" "),s("li",[t._v("语法：string.concat(string1, string2, ..., stringX)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("string1, string2, ..., stringX")]),s("br"),t._v("\n必需。将被连接为一个字符串的一个或多个字符串")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n两个或多个字符串连接后生成的新字符串")])])]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\n不改变原有字符串")]),t._v(" "),s("li",[t._v("JavaScript 版本: 1.2")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接3个字符串:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" Have a nice day!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello world! Have a nice day!")]),t._v("\n")])])]),s("h3",{attrs:{id:"indexof-返回某个指定的字符串值在字符串中首次出现的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof-返回某个指定的字符串值在字符串中首次出现的位置"}},[t._v("#")]),t._v(" indexOf() 返回某个指定的字符串值在字符串中首次出现的位置")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n返回某个指定的字符串值在字符串中首次出现的位置。"),s("br"),t._v("\n如果没有找到匹配的字符串则返回 -1。")]),t._v(" "),s("li",[t._v("语法：string.indexOf(searchvalue,start)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必需。规定需检索的字符串值。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("start")]),s("br"),t._v("\n可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 string Object.length - 1。如省略该参数，则将从字符串的首字符开始检索。")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("Number")]),s("br"),t._v("\n查找指定字符串第一次出现的位置，如果没找到匹配的字符串则返回 -1。")])])]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\n区分大小写")]),t._v(" "),s("li",[t._v("JavaScript 版本: 1.0")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 在字符串查找字符 "e" 第一次出现的位置:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world, welcome to the universe."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"e"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("h3",{attrs:{id:"lastindexof-从后向前搜索字符串-并从起始位置-0-开始计算返回字符串最后出现的位置。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof-从后向前搜索字符串-并从起始位置-0-开始计算返回字符串最后出现的位置。"}},[t._v("#")]),t._v(" lastIndexOf() 从后向前搜索字符串，并从起始位置（0）开始计算返回字符串最后出现的位置。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n返回一个指定的字符串值最后出现的位置，如果指定第二个参数 start，则在一个字符串中的指定位置从后向前搜索。\n如果没有找到匹配的字符串则返回 -1。")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.lastIndexOf(searchvalue,start)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必需。规定需检索的字符串值。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("start")]),s("br"),t._v("\n可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 string Object.length - 1。如省略该参数，则将从字符串的首字符开始检索。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Number")]),s("br"),t._v("\n查找指定字符串第一次出现的位置，如果没找到匹配的字符串则返回 -1。")])])]),t._v(" "),s("li",[s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("区分大小写")]),t._v(" "),s("li",[t._v("该方法将从后向前检索字符串，但返回是从起始位置 (0) 开始计算子字符串最后出现的位置。 看它是否含有字符串。开始检索的位置在字符串的 start 处或字符串的结尾（没有指定 start 时）。")])])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.0")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 查找字符串 "runoob" 最后出现的位置:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am from runoob，welcome to runoob site."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 28")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 从第 20 个字符开始查找字符串 "runoob" 最后出现的位置,：')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am from runoob，welcome to runoob site."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 从第 10 个字符开始从后向前查找字符串 "runoob" 最后出现的位置：')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am from runoob，welcome to runoob site."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n")])])]),s("h3",{attrs:{id:"includes-查找字符串中是否包含指定的子字符串。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes-查找字符串中是否包含指定的子字符串。"}},[t._v("#")]),t._v(" includes() 查找字符串中是否包含指定的子字符串。")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n判断字符串是否包含指定的子字符串"),s("br"),t._v("\n如果找到匹配的字符串则返回 true，否则返回 false")]),t._v(" "),s("li",[t._v("语法：string.includes(searchvalue, start)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必需，要查找的字符串。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("start")]),s("br"),t._v("\n可选，设置从那个位置开始查找，默认为 0。")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("Boolean")]),s("br"),t._v("\n如果找到匹配的字符串返回 true，否则返回 false。")])])]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\n字符串 和 数组 通用这个方法")]),t._v(" "),s("li",[t._v("JavaScript 版本: ECMAScript 6")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world, welcome to the Runoob。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("h3",{attrs:{id:"match-查找找到一个或多个正则表达式的匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-查找找到一个或多个正则表达式的匹配"}},[t._v("#")]),t._v(" match() 查找找到一个或多个正则表达式的匹配")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n在字符串内检索指定的值，或找到一个或多个正则表达式的匹配"),s("br"),t._v("\n如果想了解更多正则表达式教程请查看： "),s("a",{attrs:{href:"https://www.runoob.com/js/js-obj-regexp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp"),s("OutboundLink")],1),t._v(" 教程 和 "),s("a",{attrs:{href:"https://www.runoob.com/jsref/jsref-obj-regexp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp"),s("OutboundLink")],1),t._v(" 对象参考手册。")]),t._v(" "),s("li",[t._v("语法：string.match(regexp)")]),t._v(" "),s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("regexp")]),s("br"),t._v("\n必需。规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。")])])]),t._v(" "),s("li",[t._v("返回值\n"),s("ul",[s("li",[s("strong",[t._v("Array")]),s("br"),t._v("\n存放匹配结果的数组。该数组的内容依赖于 regexp 是否具有全局标志 g。 如果没找到匹配结果返回 null 。")])])]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\nmatch() 方法将检索字符串 String Object，以找到一个或多个与 regexp 匹配的文本。这个方法的行为在很大程度上有赖于 regexp 是否具有标志 g。如果 regexp 没有标志 g，那么 match() 方法就只能在 stringObject 中执行一次匹配。如果没有找到任何匹配的文本， match() 将返回 null。否则，它将返回一个数组，其中存放了与它找到的匹配文本有关的信息。")]),t._v(" "),s("li",[t._v("JavaScript 版本: 1.2")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 在字符串中查找 "ain":')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The rain in SPAIN stays mainly in the plain"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ain")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组：ain,ain,ain")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 全局查找字符串 "ain"，且不区分大小写:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The rain in SPAIN stays mainly in the plain"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ain")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组：ain,AIN,ain,ain")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否微信浏览器:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_weixn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ua "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userAgent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ua"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("MicroMessenger")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"micromessenger"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"repeat-复制字符串指定次数-并将它们连接在一起返回"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repeat-复制字符串指定次数-并将它们连接在一起返回"}},[t._v("#")]),t._v(" repeat() 复制字符串指定次数，并将它们连接在一起返回")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n字符串复制指定次数")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.repeat(count)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("count")]),s("br"),t._v("\n必需，设置要复制的次数。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n返回复制指定次数并连接在一起的字符串。")])])]),t._v(" "),s("li",[s("p",[t._v("注意：不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: ECMAScript 6")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 复制字符串 "Runoob" 两次:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n：RunoobRunoob")]),t._v("\n")])])]),s("h3",{attrs:{id:"replace-在字符串中查找匹配的子串-并替换与正则表达式匹配的子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replace-在字符串中查找匹配的子串-并替换与正则表达式匹配的子串"}},[t._v("#")]),t._v(" replace() 在字符串中查找匹配的子串，并替换与正则表达式匹配的子串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串"),s("br"),t._v("\n该方法不会改变原始字符串")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.replace(searchvalue,newvalue)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必须。规定子字符串或要替换的模式的 RegExp 对象。\n请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("newvalue")]),t._v("\n必需。一个字符串值。规定了替换文本或生成替换文本的函数。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n一个新的字符串，是用 replacement 替换了 regexp 的第一次匹配或所有匹配之后得到的")])])]),t._v(" "),s("li",[s("p",[t._v("注意：不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.2")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认只替换首次出现的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Visit Microsoft! Visit Microsoft!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Visit Runoob!Visit Microsoft!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局替换")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mr Blue has a blue house and a blue car"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("blue")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Mr Blue has a red house and a red car")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局替换, 忽略大小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mr Blue has a blue house and a blue car"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("blue")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Mr red has a red house and a red car")]),t._v("\n")])])]),s("h3",{attrs:{id:"replaceall-在字符串中查找匹配的子串-并替换与正则表达式匹配的所有子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replaceall-在字符串中查找匹配的子串-并替换与正则表达式匹配的所有子串"}},[t._v("#")]),t._v(" replaceAll() 在字符串中查找匹配的子串，并替换与正则表达式匹配的所有子串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\nreplaceAll() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串，该函数会替换所有匹配到的子字符串"),s("br"),t._v("\n该方法不会改变原始字符串")])]),t._v(" "),s("li",[s("p",[t._v("语法：const newStr = str.replaceAll(regexp|substr, newSubstr|function)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("regexp|substr")]),s("br"),t._v('\n请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。当使用一个 regex 时，您必须设置全局（"g"）标志， 否则，它将引发 TypeError："必须使用全局 RegExp 调用 replaceAll"。')]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("newvalue")]),t._v("\n必需。一个字符串值。规定了替换文本或生成替换文本的函数。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n一个新的字符串，是用 newSubstr 替换了 regexp 的所有匹配之后得到的")])])]),t._v(" "),s("li",[s("p",[t._v("注意：")]),t._v(" "),s("ol",[s("li",[t._v("不会改变原字符串")]),t._v(" "),s("li",[t._v("不支持 IE 浏览器")])])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.2")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 将所有 "Microsoft" 替换为 "Runoob"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Visit Microsoft! Visit Microsoft!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Visit Runoob!Visit Runoob!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局替换")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mr Blue has a blue house and a blue car"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("blue")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Mr red has a red house and a red car.")]),t._v("\n")])])]),s("h3",{attrs:{id:"search-查找与正则表达式相匹配的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search-查找与正则表达式相匹配的值"}},[t._v("#")]),t._v(" search() 查找与正则表达式相匹配的值")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。"),s("br"),t._v("\n如果没有找到任何匹配的子串，则返回 -1。")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.search(searchvalue)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("searchvalue")]),s("br"),t._v("\n必须。查找的字符串或者正则表达式。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Number")]),s("br"),t._v("\n与指定查找的字符串或者正则表达式相匹配的 String 对象起始位置。")])])]),t._v(" "),s("li",[s("p",[t._v("注意：")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.2")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行一次对大小写敏感的查找")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mr. Blue has a blue house"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行一次忽略大小写的检索")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mr. Blue has a blue house"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("blue")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n")])])]),s("h3",{attrs:{id:"slice-提取字符串的片断-并在新的字符串中返回被提取的部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice-提取字符串的片断-并在新的字符串中返回被提取的部分"}},[t._v("#")]),t._v(" slice() 提取字符串的片断，并在新的字符串中返回被提取的部分")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\nslice(start, end) 方法可提取字符串的某个部分，并以新的字符串返回被提取的部分。"),s("br"),t._v("\n使用 start（包含） 和 end（不包含） 参数来指定字符串提取的部分。"),s("br"),t._v("\nstart 参数字符串中第一个字符位置为 0, 第二个字符位置为 1, 以此类推，如果是负数表示从尾部截取多少个字符串，slice(-2) 表示提取原数组中的倒数第二个元素到最后一个元素（包含最后一个元素）。"),s("br"),t._v("\nend 参数如果为负数，-1 指字符串的最后一个字符的位置，-2 指倒数第二个字符，以此类推。")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.slice(start,end)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("start")]),s("br"),t._v("\n必须。 要抽取的片断的起始下标，第一个字符位置为 0。如果为负数，则从尾部开始截取。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("end")]),s("br"),t._v("\n可选。 紧接着要截取的片段结尾的下标。若未指定此参数，则要提取的子串包括 start 到原字符串结尾的字符串。如果该参数是负数，那么它规定的是从字符串的尾部开始算起的位置。slice(-2) 表示提取原数组中的倒数第二个元素到最后一个元素（包含最后一个元素）。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n提取的字符串")])])]),t._v(" "),s("li",[s("p",[t._v("注意：")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.0")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取字符串的片断")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ello")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第3个位置提取字符串片段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lo world!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取最后一个字符和最后两个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d!")]),t._v("\n")])])]),s("h3",{attrs:{id:"split-把字符串分割为字符串数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split-把字符串分割为字符串数组"}},[t._v("#")]),t._v(" split() 把字符串分割为字符串数组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n把一个字符串分割成字符串数组"),s("br"),t._v('\n如果把空字符串 ("") 用作 separator，那么 stringObject 中的每个字符之间都会被分割')])]),t._v(" "),s("li",[s("p",[t._v("语法：string.split(separator,limit)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("separator")]),s("br"),t._v("\n可选。字符串或正则表达式，从该参数指定的地方分割 string Object。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("limit")]),s("br"),t._v("\n可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Array")]),s("br"),t._v("\n一个字符串数组。该数组是通过在 separator 指定的边界处将字符串 string Object 分割成子串创建的。返回的数组中的字串不包括 separator 自身。")])])]),t._v(" "),s("li",[s("p",[t._v("注意：")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.1")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略分割参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How are you doing today?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['How are you doing today?']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How,are,you,doing,today?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['How', 'are', 'you']")]),t._v("\n")])])]),s("h3",{attrs:{id:"split-把字符串分割为字符串数组-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split-把字符串分割为字符串数组-2"}},[t._v("#")]),t._v(" split() 把字符串分割为字符串数组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n把一个字符串分割成字符串数组"),s("br"),t._v('\n如果把空字符串 ("") 用作 separator，那么 stringObject 中的每个字符之间都会被分割')])]),t._v(" "),s("li",[s("p",[t._v("语法：string.split(separator,limit)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("separator")]),s("br"),t._v("\n可选。字符串或正则表达式，从该参数指定的地方分割 string Object。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("limit")]),s("br"),t._v("\n可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Array")]),s("br"),t._v("\n一个字符串数组。该数组是通过在 separator 指定的边界处将字符串 string Object 分割成子串创建的。返回的数组中的字串不包括 separator 自身。")])])]),t._v(" "),s("li",[s("p",[t._v("注意：")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.1")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略分割参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How are you doing today?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['How are you doing today?']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How,are,you,doing,today?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['How', 'are', 'you']")]),t._v("\n")])])]),s("h3",{attrs:{id:"substr-从起始索引号提取字符串中指定数目的字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substr-从起始索引号提取字符串中指定数目的字符"}},[t._v("#")]),t._v(" substr() 从起始索引号提取字符串中指定数目的字符")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n从起始索引号提取字符串中指定数目的字符"),s("br"),t._v("\nsubstr() 的参数指定的是子串的开始位置和长度，因此它可以替代 substring() 和 slice() 来使用"),s("br"),t._v("\nECMAscript 没有对该方法进行标准化，因此反对使用它")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.substr(start,length)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("start")]),s("br"),t._v("\n必需。要抽取的子串的起始下标。必须是数值。如果是负数，那么该参数声明从字符串的尾部开始算起的位置。也就是说，-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("length")]),s("br"),t._v("\n可选。子串中的字符数。必须是数值。如果省略了该参数，那么返回从 stringObject 的开始位置到结尾的字串。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),s("br"),t._v("\n一个字符串数组。该数组是通过在 separator 指定的边界处将字符串 string Object 分割成子串创建的。返回的数组中的字串不包括 separator 自身。")])])]),t._v(" "),s("li",[s("p",[t._v("注意：substr() 方法不会改变源字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: 1.1")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略分割参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How are you doing today?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['How are you doing today?']")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How,are,you,doing,today?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['How', 'are', 'you']")]),t._v("\n")])])]),s("h3",{attrs:{id:"substring-提取字符串中两个指定的索引号之间的字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring-提取字符串中两个指定的索引号之间的字符"}},[t._v("#")]),t._v(" substring() 提取字符串中两个指定的索引号之间的字符")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n用于提取字符串中介于两个指定下标之间的字符"),s("br"),t._v("\n返回的子串包括 开始 处的字符，但不包括 结束 处的字符")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.substring(from, to)")])]),t._v(" "),s("li",[s("p",[t._v("参数：")]),t._v(" "),s("ul",[s("li",[t._v("参数 1："),s("strong",[t._v("from")]),s("br"),t._v("\n必需。一个非负的整数，规定要提取的子串的第一个字符在 string Object 中的位置")]),t._v(" "),s("li",[t._v("参数 2："),s("strong",[t._v("to")]),s("br"),t._v("\n可选。一个非负的整数，比要提取的子串的最后一个字符在 string Object 中的位置多 1。"),s("br"),t._v("\n如果省略该参数，那么返回的子串会一直到字符串的结尾")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")])])])]),t._v(" "),s("li",[s("p",[t._v("注意：substr() 方法不会改变源字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本:")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lo world!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lo w")]),t._v("\n")])])]),s("h3",{attrs:{id:"tolowercase-把字符串转换为小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tolowercase-把字符串转换为小写"}},[t._v("#")]),t._v(" toLowerCase() 把字符串转换为小写")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n把字符串转换为小写")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.toLowerCase()")])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")])])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("br"),t._v("\n不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本:")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NIKE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nike")]),t._v("\n")])])]),s("h3",{attrs:{id:"touppercase-把字符串转换为大写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#touppercase-把字符串转换为大写"}},[t._v("#")]),t._v(" toUpperCase() 把字符串转换为大写")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n把字符串转换为大写")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.toUpperCase()")])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")])])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("br"),t._v("\n不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本:")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nike"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NIKE")]),t._v("\n")])])]),s("h3",{attrs:{id:"tolocalelowercase-根据本地主机的语言环境把字符串转换为小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tolocalelowercase-根据本地主机的语言环境把字符串转换为小写"}},[t._v("#")]),t._v(" toLocaleLowerCase() 根据本地主机的语言环境把字符串转换为小写")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n根据本地主机的语言环境把字符串转换为小写"),s("br"),t._v("\n本地是根据浏览器的语言设置来判断的"),s("br"),t._v("\n通常，该方法与 toLowerCase() 方法返回的结果相同，只有几种语言（如土耳其语）具有地方特有的大小写映射")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.toLocaleLowerCase()")])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),t._v("\n根据本地语言转换为小写。")])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("br"),t._v("\n不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: ECMAScript 1")])])]),t._v(" "),s("h3",{attrs:{id:"tolocaleuppercase-根据本地主机的语言环境把字符串转换为大写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tolocaleuppercase-根据本地主机的语言环境把字符串转换为大写"}},[t._v("#")]),t._v(" toLocaleUpperCase() 根据本地主机的语言环境把字符串转换为大写")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n根据本地主机的语言环境把字符串转换为大写"),s("br"),t._v("\n本地是根据浏览器的语言设置来判断的"),s("br"),t._v("\n通常，该方法与 toLowerCase() 方法返回的结果相同，只有几种语言（如土耳其语）具有地方特有的大小写映射")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.toLocaleUpperCase()")])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),t._v("\n根据本地语言转换为大写")])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("br"),t._v("\n不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本: ECMAScript 1")])])]),t._v(" "),s("h3",{attrs:{id:"trim-去除字符串两边的空白"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trim-去除字符串两边的空白"}},[t._v("#")]),t._v(" trim() 去除字符串两边的空白")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n删除字符串的头尾空白符，空白符包括：空格、制表符 tab、换行符等其他空白符等"),s("br"),t._v("\n不会改变原始字符串"),s("br"),t._v("\n不适用于 null, undefined, Number 类型")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.trim()")])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),t._v("\n返回移除头尾空格的字符串")])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("br"),t._v("\n不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本:"),s("br"),t._v("\nECMAScript 5")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" nike      "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nike")]),t._v("\n")])])]),s("h3",{attrs:{id:"tostring-返回一个字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring-返回一个字符串"}},[t._v("#")]),t._v(" toString() 返回一个字符串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简介："),s("br"),t._v("\n返回一个表示 String 对象的值")])]),t._v(" "),s("li",[s("p",[t._v("语法：string.toString()")])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("String")]),t._v("\n一个字符串")])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("br"),t._v("\n不会改变原字符串")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript 版本:"),s("br"),t._v("\nECMAScript 1")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Runoob")]),t._v("\n")])])]),s("h3",{attrs:{id:"valueof-返回某个字符串对象的原始值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof-返回某个字符串对象的原始值"}},[t._v("#")]),t._v(" valueOf() 返回某个字符串对象的原始值")]),t._v(" "),s("ul",[s("li",[t._v("简介："),s("br"),t._v("\n返回 String 对象的原始值\n通常由 JavaScript 在后台自动进行调用，而不是显式地处于代码中")]),t._v(" "),s("li",[t._v("语法：string.valueOf()")]),t._v(" "),s("li",[t._v("注意："),s("br"),t._v("\n通常由 JavaScript 在后台自动进行调用，而不是显式地处于代码中")])])])}),[],!1,null,null,null);s.default=r.exports}}]);